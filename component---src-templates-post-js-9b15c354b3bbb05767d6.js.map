{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["urlArr","domainWithProtocol","tldWithPath","domainWithProtocolArr","post","data","markdownRemark","date","Date","frontmatter","toLocaleDateString","day","month","year","title","tags","source","className","href","target","rel","split","length","map","tag","to","key","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"6FAAA,oIAQe,sBAAe,IAYpBA,EACAC,EACAC,EACAC,EAdgBC,EADG,EAAXC,KACRC,eACFC,EAAO,IAAIC,KAAKJ,EAAKK,YAAYF,MAAMG,mBAAmB,QAAS,CACvEC,IAAK,UACLC,MAAO,UACPC,KAAM,YALmB,EASvBT,EADFK,YAAeK,EARU,EAQVA,MAAOC,EARG,EAQHA,KAAMC,EARH,EAQGA,OAa9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAOA,IACZ,yBAAKG,UAAU,gBACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAYA,UAAU,6BACtB,6BAAMV,IAEPS,GACC,uBACEE,KAAMF,EACNG,OAAO,SACPC,IAAI,aACJH,UAAU,wBAEV,kBAAC,IAAD,CAASA,UAAU,+BACnB,8BAzBFjB,EAyBkBgB,EAzBLK,MAAM,KACnBpB,EAAqBD,EAAOA,EAAOsB,OAAS,GAC5CpB,EAAcF,EAAOA,EAAOsB,OAAS,IACrCnB,EAAwBF,EAAmBoB,MAAM,MAClBlB,EAAsBmB,OAAS,GAEpE,IADYpB,EAAYmB,MAAM,KAAK,MAuB/B,wBAAIJ,UAAU,uBAAuBH,GACrC,yBAAKG,UAAU,sBACZF,EAAKQ,KAAI,SAAAC,GAAG,OACX,kBAAC,OAAD,CAAMC,GAAE,SAAWD,EAAOE,IAAKF,EAAKP,UAAU,qBAC5C,kBAAC,IAAD,CAAOA,UAAU,4BACjB,6BAAMO,SAKd,yBAAKG,wBAAyB,CAAEC,OAAQxB,EAAKyB,UAK5C,IAAMC,EAAS,c","file":"component---src-templates-post-js-9b15c354b3bbb05767d6.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { FaCalendar, FaGlobe, FaTag } from \"react-icons/fa\"\n\nimport \"./post.css\"\n\nexport default ({ data }) => {\n  const { markdownRemark: post } = data\n  const date = new Date(post.frontmatter.date).toLocaleDateString(\"de-CH\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\",\n  })\n  const {\n    frontmatter: { title, tags, source },\n  } = post\n\n  const getDomain = url => {\n    const urlArr = url.split(\".\")\n    const domainWithProtocol = urlArr[urlArr.length - 2]\n    const tldWithPath = urlArr[urlArr.length - 1]\n    const domainWithProtocolArr = domainWithProtocol.split(\"/\")\n    const domain = domainWithProtocolArr[domainWithProtocolArr.length - 1]\n    const tld = tldWithPath.split(\"/\")[0]\n    return `${domain}.${tld}`\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"post__header\">\n        <div className=\"post__header__date\">\n          <FaCalendar className=\"post__header__date__icon\" />\n          <div>{date}</div>\n        </div>\n        {source && (\n          <a\n            href={source}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"post__header__source\"\n          >\n            <FaGlobe className=\"post__header__source__icon\" />\n            <div>{getDomain(source)}</div>\n          </a>\n        )}\n        <h1 className=\"post__header__title\">{title}</h1>\n        <div className=\"post__header__tags\">\n          {tags.map(tag => (\n            <Link to={`/?tag=${tag}`} key={tag} className=\"post__header__tag\">\n              <FaTag className=\"post__header__tag__icon\" />\n              <div>{tag}</div>\n            </Link>\n          ))}\n        </div>\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        tags\n        source\n      }\n    }\n  }\n`\n"],"sourceRoot":""}